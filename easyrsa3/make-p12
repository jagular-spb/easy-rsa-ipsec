#!/bin/env bash

if [[ -z "$@" ]]; then
   printf "Generate keys with given name,\nwith custom expiration date\nand export it to pkcs12 format\n\n Usage: $0 <cert_name> <days_to_expire> <nopass to gen without password> \n(for example: $0 users.navigat.ru 30 nopass)\n"
      exit 1
fi

name="${1}"
days="${2:-30}"
pass="${3:-nopass}"

curr_date="$(date '+%Y%m%d-%H:%M:%S')"
echo -e "------------${curr_date}----------------\n" >> users_out.txt
read latest_ip < latest_ip.txt
declare -i current_ip=($latest_ip)

[[ "${pass}" == "random" ]] && pass="$(< /dev/urandom tr -dc 0-9 | head -c5)"

echo "name: ${name} pass: ${pass}"

if [[ "${pass}" = "nopass" ]] && [[ ! -f "pki/private/${name}.key" ]]; then

  ./easyrsa --days="${days}" build-client-full  "${name}" "nopass"
  ./easyrsa export-p12 "${name}" "nopass"

  echo "ifconfig-push 10.11.162.${current_ip} 255.255.255.0" > "/etc/openvpn/auto_gen_ccd_files/${name}"
  echo -e 'push "dhcp-option DNS 10.10.16.1"\npush "dhcp-option DOMAIN navigator.private"' >> "/etc/openvpn/auto_gen_ccd_files/${name}"
  echo -e 'comp-lzo yes\npush "comp-lzo yes"\n' >> "/etc/openvpn/auto_gen_ccd_files/${name}"
  echo 'push "route 10.10.16.0 255.255.255.0"' >> "/etc/openvpn/auto_gen_ccd_files/${name}"
  echo "${name}, nopass, ${current_ip}" >> users_out.txt

elif [[ ! "${pass}" = "nopass" ]] && [[ ! -f "pki/private/${name}.key" ]]; then

  ./easyrsa --days="${days}" build-client-full  "${name}" "nopass"
  ./easyrsa --passout=pass:"${pass}" export-p12 "${name}"

  echo "ifconfig-push 10.11.162.${current_ip} 255.255.255.0" > "/etc/openvpn/auto_gen_ccd_files/${name}"
  echo -e 'push "dhcp-option DNS 10.10.16.1"\npush "dhcp-option DOMAIN navigator.private"' >> "/etc/openvpn/auto_gen_ccd_files/${name}"
  echo -e 'comp-lzo yes\npush "comp-lzo yes"\n' >> "/etc/openvpn/auto_gen_ccd_files/${name}"
  echo 'push "route 10.10.16.0 255.255.255.0"' >> "/etc/openvpn/auto_gen_ccd_files/${name}"
  echo "${name}, ${pass}, ${current_ip}" >> users_out.txt

  echo -e "---> RESULTS:\n New private key & pkcs12 container are stored at pki/private"
  echo -e "             key: ${name}.key\n             pkcs12: ${name}.p12\n             pass: ${pass}"

elif  [[ -f "pki/private/${name}.key" ]]; then
  echo -e "Key for ${name} already exsists\nTry to use renew-p12 ${name}"
  exit 1
fi

current_ip=$current_ip+1
echo $current_ip > latest_ip.txt
./easyrsa gen-crl

echo "---> RESULTS in pki/private"